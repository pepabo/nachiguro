/*doc
---
title: Heading
name: heading
category: Components
---

見出しをマークアップするコンポーネントです。
h1からh6、どのタグに関わらず大きさを調整できます。


```example
<h1 class="ncgr-heading -size-l">忍者スリスリ君</h1>
<h1 class="ncgr-heading -size-m">忍者スリスリ君</h1>
<h1 class="ncgr-heading -size-s">忍者スリスリ君</h1>
```

見出しにボーダーをつける場合はspanで入れ子にして`._border`のclassをつけます。

```example
<h1 class="ncgr-heading -size-l">
  <span class="_border">
    忍者スリスリ君
  </span>
</h1>
<h1 class="ncgr-heading -size-m">
  <span class="_border">
    忍者スリスリ君
  </span>
</h1>
<h1 class="ncgr-heading -size-s">
  <span class="_border">
    忍者スリスリ君
  </span>
</h1>
```

#### Skeleton

```example
<div class="ncgr-skeleton-heading -size-l"></div>
<div class="ncgr-skeleton-heading -size-m"></div>
<div class="ncgr-skeleton-heading -size-s"></div>
```

*/

@use 'sass:map';
@use '@inhouse/adapter/functions' as adapter-functions;
@use '@inhouse/adapter/mixins' as adapter-mixins;

// Flavor variables

$heading-font-size-levels: (
  s: (
    s: m,
    m: l,
    l: xl
  ),
  m: (
    s: l,
    m: xl,
    l: xxl
  ),
  l: (
    s: xl,
    m: xxl,
    l: xxxl
  )
);

// Adapter functions

@function get-heading-font-size-level(
  $size: m,
  $boundary-size-level: m
) {
  @return
    map.get(
      map.get(
        $heading-font-size-levels,
        $size
      ),
      $boundary-size-level
    );
}

// Heading Variables

$options: (
  size: m,
  brightness: light
);

// Heading Functions

@function get-color(
  $brightness: light
) {
  @if $brightness == light {
    @return adapter-functions.get-semantic-color(
      $intention: neutral,
      $level: 800
    );
  } @else if $brightness == dark {
    @return adapter-functions.get-color(white, 1000);
  }
}

@function get-sizes() {
  @return map.keys($heading-font-size-levels);
}

@function get-boundary-size-levels() {
  @return map.keys(map.get($heading-font-size-levels, s));
}

// Heading Private Mixins

@mixin -text-style(
  $size: m,
  $boundary-size-level: s
) {
  font-size:
    adapter-functions.get-font-size(
      $level: get-heading-font-size-level(
        $size: $size,
        $boundary-size-level: $boundary-size-level
      ),
    );
  line-height:
    adapter-functions.get-line-height(
      $level: get-heading-font-size-level(
        $size: $size,
        $boundary-size-level: $boundary-size-level
      ),
      $density: normal
    );
}

@mixin -skeleton-text-style(
  $size: m,
  $boundary-size-level: s
) {
  @include adapter-mixins.skeleton-text(
    $level: get-heading-font-size-level(
      $size: $size,
      $boundary-size-level: $boundary-size-level
    ),
    $density: normal
  );
}

@mixin -color-ruleset(
  $brightness: light
) {
  color:
    get-color(
      $brightness: $brightness
    );

  a {
    color:
      get-color(
        $brightness: $brightness
      );
  }

  ._border {
    border-bottom-color:
      get-color(
        $brightness: $brightness
      );
  }
}

.ncgr-heading {
  margin: 0;
  padding: 0;
  font-weight: bold;

  @include -text-style(
    $size: map.get($options, size),
    $boundary-size-level: s
  );

  @include -color-ruleset(
    $brightness: map.get($options, brightness)
  );

  ._border {
    display: inline-block;
    border-style: solid;
    border-bottom-width:
      adapter-functions.get-line-width-size(
        $level: xl
      );
  }

  @each $boundary-size-level in get-boundary-size-levels() {
    @include adapter-mixins.mq-boundary(up, $boundary-size-level) {
      @include -text-style(
        $size: map.get($options, size),
        $boundary-size-level: $boundary-size-level
      );
    }
  }

  @each $size in get-sizes() {
    &.-size-#{$size} {
      @include -text-style(
        $size: $size,
        $boundary-size-level: s
      );

      @each $boundary-size-level in get-boundary-size-levels() {
        @include adapter-mixins.mq-boundary(up, $boundary-size-level) {
          @include -text-style(
            $size: $size,
            $boundary-size-level: $boundary-size-level
          );
        }
      }
    }
  }

  @each $brightness in adapter-functions.get-brightnesses() {
    &.-brightness-#{$brightness} {
      @include -color-ruleset(
        $brightness: $brightness
      );
    }
  }
}

.ncgr-skeleton-heading {
  @include -skeleton-text-style(
    $size: map.get($options, size),
    $boundary-size-level: s
  );

  @each $size in get-sizes() {
    &.-size-#{$size} {
      @include -skeleton-text-style(
        $size: $size,
        $boundary-size-level: s
      );

      @each $boundary-size-level in get-boundary-size-levels() {
        @include adapter-mixins.mq-boundary(up, $boundary-size-level) {
          @include -skeleton-text-style(
            $size: $size,
            $boundary-size-level: $boundary-size-level
          );
        }
      }
    }
  }
}
