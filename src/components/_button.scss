/*doc
---
title: button
name: button
category: Components
---

`.ncgr-button` を指定した要素はボタンになります。
内部は`_body`でマークアップします。

```example
<button class="ncgr-button">
  <div class="_body">button</div>
</button>
```

#### Size

`.-size-{size}`を指定するとそのサイズのボタンになります。

```example
<button class="ncgr-button -size-xs">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -size-s">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -size-m">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -size-l">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -size-xl">
  <div class="_body">button</div>
</button>
```

#### Appearance

`.-appearance-{appearance}` を指定するとその見た目のボタンになります。

```example
<button class="ncgr-button -appearance-flat">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -appearance-outlined">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -appearance-solid">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -appearance-white">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -appearance-transparent">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -appearance-hollow">
  <div class="_body">button</div>
</button>
```

#### State

`.--{state}` を指定すると、その状態のボタンになります。

```example
<button class="ncgr-button --enabled">
  <div class="_body">button</div>
</button>
<button class="ncgr-button --hover">
  <div class="_body">button</div>
</button>
<button class="ncgr-button --focused">
  <div class="_body">button</div>
</button>
<button class="ncgr-button --disabled">
  <div class="_body">button</div>
</button>
```

### Shape

`.-shape-{shape}` を指定するとその形状のボタンになります。

```example
<button class="ncgr-button -shape-square">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -shape-circle">
  <div class="_body">button</div>
</button>
```

#### Color

`.-color-{intention}` を指定すると、色が変わって意味を持つボタンになります。

```example
<button class="ncgr-button -color-neutral">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -color-negative">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -color-interactive">
  <div class="_body">button</div>
</button>
<button class="ncgr-button -color-favorite">
  <div class="_body">button</div>
</button>
```

#### Leading

`_body`の直前に`_leading`でIconをマークアップすると前にアイコンがついたボタンになります。
アイコンには`_icon`クラスを付与します。

```example
<button class="ncgr-button">
  <div class="_leading">
    <span class="ncgr-icon _icon" data-icon="heart"></span>
  </div>
  <div class="_body">button</div>
</button>
```

Leadingのみにしてアイコンのみのボタンにすることもできます。
アイコンのみのボタンにする場合はボタンの意味がわかりやすいように必ず`aria-label`をつけます。

```example
<button aria-label="Favorite" class="ncgr-button">
  <div class="_leading">
    <span class="ncgr-icon _icon" data-icon="heart"></span>
  </div>
</button>
```

他にもLeadingにはAvatarを入れることができます。

```example
<button aria-label="Favorite" class="ncgr-button">
  <div class="_leading">
    <div class="ncgr-avatar -size-xs">
      <img src="https://picsum.photos/id/177/200/300">
    </div>
  </div>
</button>
```

#### Trailing

`_body`の直後に`_trailing`でIconをマークアップすると後にアイコンがついたボタンになります。
アイコンには`_icon`クラスを付与します。

```example
<button class="ncgr-button">
  <div class="_body">button</div>
  <div class="_trailing">
    <span class="ncgr-icon _icon" data-icon="chevron_right"></span>
  </div>
</button>
```

#### Apple

`.ncgr-apple-button` を指定すると、Appleの色のボタンになります。

```example
<button class="ncgr-apple-button">
  <div class="_body">button</div>
</button>
```

#### Twitter

`.ncgr-twitter-button` を指定すると、Twitterの色のボタンになります。

```example
<button class="ncgr-twitter-button">
  <div class="_body">button</div>
</button>
```

#### X（旧：Twitter）

`.ncgr-x-button` を指定すると、Xの色のボタンになります。

```example
<button class="ncgr-x-button">
  <div class="_body">button</div>
</button>
```

#### Facebook

`.ncgr-facebook-button` を指定すると、Facebookの色のボタンになります。

```example
<button class="ncgr-facebook-button">
  <div class="_body">button</div>
</button>
```

#### ニコニコ動画

`.ncgr-nicovideo-button` を指定すると、ニコニコ動画の色のボタンになります。

```example
<button class="ncgr-nicovideo-button">
  <div class="_body">button</div>
</button>
```

#### LINE

`.ncgr-line-button` を指定すると、LINEの色のボタンになります。

```example
<button class="ncgr-line-button">
  <div class="_body">button</div>
</button>
```

#### Skeleton

```example
<div class="ncgr-skeleton-button">
</div>
```


*/

// TODO: 全部置き換えできたら名前をbuttonからbuttonにする

@use '@inhouse/button/mixins';
@use '@inhouse/adapter/functions' as adapter;

@mixin -appearance-style($appearance, $brightness, $color, $state) {
  @if $appearance == solid {
    box-shadow: inset adapter.get-solid-button-shadow-box-shadow();
  } @else {
    box-shadow: inherit;
  }
}

@mixin -appearance-state-ruleset($appearance, $brightness, $color) {
  &:hover,
  &.--hover {
    @include -appearance-style(
      $appearance: $appearance,
      $brightness: $brightness,
      $color: $color,
      $state: hover
    );
  }

  &:focus,
  &.--focused {
    @include -appearance-style(
      $appearance: $appearance,
      $brightness: $brightness,
      $color: $color,
      $state: focused
    );
  }

  &:disabled,
  &.--disabled {
    @include -appearance-style(
      $appearance: $appearance,
      $brightness: $brightness,
      $color: $color,
      $state: disabled
    );

    cursor: default;
    opacity: adapter.get-disabled-surface-opacity();
  }
}

@mixin -modifier() {
  @include -appearance-style(
    $appearance: solid,
    $brightness: light,
    $color: neutral,
    $state: enabled
  );
  @include -appearance-state-ruleset(
    $appearance: solid,
    $brightness: light,
    $color: neutral,
  );

  @each $appearance in adapter.get-button-appearances() {
    &.-appearance-#{"" + $appearance} {
      @include -appearance-style(
        $appearance: $appearance,
        $brightness: light,
        $color: neutral,
        $state: enabled
      );
      @include -appearance-state-ruleset(
        $appearance: $appearance,
        $brightness: light,
        $color: neutral,
      );
    }
  }

  @each $intention in adapter.get-button-colors() {
    &.-color-#{$intention} {
      @include -appearance-style(
        $appearance: solid,
        $brightness: light,
        $color: $intention,
        $state: enabled
      );
      @include -appearance-state-ruleset(
        $appearance: solid,
        $brightness: light,
        $color: $intention,
      );
    }

    @each $appearance in adapter.get-button-appearances() {
      &.-color-#{$intention}.-appearance-#{"" + $appearance} {
        @include -appearance-style(
          $appearance: $appearance,
          $brightness: light,
          $color: $intention,
          $state: enabled
        );
        @include -appearance-state-ruleset(
          $appearance: $appearance,
          $brightness: light,
          $color: $intention,
        );
      }
    }
  }

  @each $brightness in adapter.get-brightnesses() {
    &.-brightness-#{$brightness} {
      @include -appearance-style(
        $appearance: solid,
        $brightness: $brightness,
        $color: neutral,
        $state: enabled
      );
      @include -appearance-state-ruleset(
        $appearance: solid,
        $brightness: $brightness,
        $color: neutral,
      );
    }

    @each $appearance in adapter.get-button-appearances() {
      &.-brightness-#{$brightness}.-appearance-#{"" + $appearance} {
        @include -appearance-style(
          $appearance: $appearance,
          $brightness: $brightness,
          $color: neutral,
          $state: enabled
        );
        @include -appearance-state-ruleset(
          $appearance: $appearance,
          $brightness: $brightness,
          $color: neutral,
        );
      }

      @each $intention in adapter.get-button-colors() {
        &.-brightness-#{$brightness}.-appearance-#{"" + $appearance}.-color-#{$intention} {
          @include -appearance-style(
            $appearance: $appearance,
            $brightness: $brightness,
            $color: $intention,
            $state: enabled
          );
          @include -appearance-state-ruleset(
            $appearance: $appearance,
            $brightness: $brightness,
            $color: $intention,
          );
        }
      }
    }
  }

  // NachiguroのユースケースだとOutlinedのborder-colorはintentionの影響がない単純なStroke Colorがよい
  &.-appearance-outlined {
    border-color: adapter.get-border-color($brightness: light, $name: mid_emphasis) !important;
  }
}

.ncgr-button {
  @include mixins.style((
    appearance: solid,
    brightness: light,
    color: neutral,
    size: m,
    shape: square,
    width: auto,
  ));

  @include -modifier();
}

.ncgr-apple-button {
  @include mixins.style((
    appearance: solid,
    brightness: light,
    color: #000,
    size: m,
    shape: square,
    width: auto,
  ));

  @include -modifier();
}

.ncgr-twitter-button {
  @include mixins.style((
    appearance: solid,
    brightness: light,
    color: #55ACEE,
    size: m,
    shape: square,
    width: auto,
  ));

  @include -modifier();
}

.ncgr-x-button {
  @include mixins.style((
    appearance: solid,
    brightness: light,
    color: #000,
    size: m,
    shape: square,
    width: auto,
  ));

  @include -modifier();
}

.ncgr-facebook-button {
  @include mixins.style((
    appearance: solid,
    brightness: light,
    color: #1877f2,
    size: m,
    shape: square,
    width: auto,
  ));

  @include -modifier();
}

.ncgr-nicovideo-button {
  @include mixins.style((
    appearance: solid,
    brightness: light,
    color: #EFB10A,
    size: m,
    shape: square,
    width: auto,
  ));

  @include -modifier();
}

.ncgr-line-button {
  @include mixins.style((
    appearance: solid,
    brightness: light,
    color: #00C300,
    size: m,
    shape: square,
    width: auto,
  ));

  @include -modifier();
}

.ncgr-skeleton-button {
  @include mixins.skeleton-style();
}
